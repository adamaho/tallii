generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id           Int           @id @default(autoincrement())
  email             String        @unique
  username          String
  avatar_background String        @default("#F6B67A")
  avatar_emoji      String        @default("0x1F355")
  password          String
  refresh_token     RefreshToken?
  matches           Match[]
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
  match_admins      MatchAdmin[]
  players           TeamPlayer[]
}

model RefreshToken {
  refresh_token_id Int      @id @default(autoincrement())
  user_id          Int      @unique
  refresh_token    String
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  user             User     @relation(fields: [user_id], references: [user_id])
}

model Match {
  match_id        Int          @id @default(autoincrement())
  name            String
  description     String?
  game_type       String
  creator_user_id Int
  winning_team_id Int?         @unique
  winning_team            Team?        @relation("MatchWinningTeam", fields: [winning_team_id], references: [team_id])
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
  admins          MatchAdmin[]
  teams           Team[]
  games           Game[]
  creator         User         @relation(fields: [creator_user_id], references: [user_id])
}

model MatchAdmin {
  match_admin_id Int   @id @default(autoincrement())
  match_id       Int
  user_id        Int
  match          Match @relation(fields: [match_id], references: [match_id])
  user           User  @relation(fields: [user_id], references: [user_id])
}

model Team {
  team_id      Int          @id @default(autoincrement())
  match_id     Int
  name         String
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt
  match        Match        @relation(fields: [match_id], references: [match_id])
  game_scores  GameScores[]
  game         Game?
  match_winner Match?       @relation("MatchWinningTeam")
  players      TeamPlayer[]
}

model TeamPlayer {
  team_player_id Int  @id @default(autoincrement())
  team_id        Int
  user_id        Int
  team           Team @relation(fields: [team_id], references: [team_id])
  user           User @relation(fields: [user_id], references: [user_id])
}

model Game {
  game_id         Int          @id @default(autoincrement())
  match_id        Int
  name            String?
  winning_team_id Int?         @unique
  winning_team    Team?        @relation(fields: [winning_team_id], references: [team_id])
  match           Match        @relation(fields: [match_id], references: [match_id])
  game_scores     GameScores[]
}

model GameScores {
  team_id Int
  game_id Int
  score   Int
  game    Game @relation(fields: [game_id], references: [game_id])
  team    Team @relation(fields: [team_id], references: [team_id])

  @@id([team_id, game_id])
}
